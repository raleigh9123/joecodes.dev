{"version":3,"sources":["webpack:///./src/components/landing.js","webpack:///./src/components/about.js","webpack:///./src/components/article-preview.js","webpack:///./src/pages/index.js"],"names":["LandingContainer","styled","div","props","theme","borderColor","landingTextBackground","landingTextBoxShadow","landingBackground","withTheme","Container","ImageWrapper","background","data","console","log","PreviewTitle","h3","article","alt","fluid","heroImage","to","slug","title","publishDate","dangerouslySetInnerHTML","__html","description","childMarkdownRemark","html","Wrapper","ArticleList","ul","SectionHeadline","h2","RootIndex","render","siteTitle","get","this","posts","location","map","node","key","React","Component","pageQuery"],"mappings":"m9BAKA,IAAMA,EAAmBC,IAAOC,IAAV,KAEA,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,eAanB,SAAAF,GAAK,OAAIA,EAAMC,MAAME,yBAI3B,SAAAH,GAAK,OAAIA,EAAMC,MAAMG,wBAWf,SAAAJ,GAAK,OAAIA,EAAMC,MAAMI,qBAiB9BC,eAbC,SAACN,GAAD,OACd,kBAACH,EAAD,KACE,2CACA,4BACE,wCACA,6BACA,8CAEF,wDACA,gE,gkBC1CJ,IAAMU,EAAYT,IAAOC,IAAV,KAEO,SAACC,GAAD,OAAWA,EAAMC,MAAMC,eAYvCM,EAAeV,IAAOC,IAAV,KAEI,SAAAC,GAAK,OAAIA,EAAMC,MAAMQ,cAuC5BH,eAjCD,WACZ,IAAMI,EAAI,OAkBV,OAFAC,QAAQC,IAAIF,GAGZ,kBAACH,EAAD,KACE,kBAACC,EAAD,MAOA,uD,8ICnDJ,IAAMK,EAAef,IAAOgB,GAAV,KAKH,kBAAGC,EAAH,EAAGA,QAAH,OACb,6BACE,kBAAC,IAAD,CAAKC,IAAI,GAAGC,MAAOF,EAAQG,UAAUD,QACrC,kBAACJ,EAAD,KACE,kBAAC,OAAD,CAAMM,GAAE,SAAWJ,EAAQK,MAASL,EAAQM,QAE9C,+BAAQN,EAAQO,aAChB,yBACEC,wBAAyB,CACvBC,OAAO,QAAST,EAAQU,YAAYC,oBAAoBC,KAAlD,c,8gBCPd,IAAMC,EAAU9B,IAAOC,IAAV,KAIP8B,EAAc/B,IAAOgC,GAAV,KAQXC,EAAkBjC,IAAOkC,GAAV,KAIH,SAAAhC,GAAK,OAAIA,EAAMC,MAAMC,eAGjC+B,E,gLACJC,OAAA,WACE,IAAMC,EAAYC,IAAIC,KAAM,sCACtBC,EAAQF,IAAIC,KAAM,0CAExB,OACE,kBAAC,IAAD,CAAQE,SAAUF,KAAKrC,MAAMuC,UAC3B,6BACE,kBAAC,IAAD,CAAQlB,MAAOc,IAEf,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAACP,EAAD,KACE,kBAACG,EAAD,wBACA,kBAACF,EAAD,KACGS,EAAME,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACZ,OACE,wBAAIC,IAAKD,EAAKrB,MACZ,kBAAC,EAAD,CAAgBL,QAAS0B,a,GAlBrBE,IAAMC,WAgCjBC,GAFEvC,sBAAU2B,GAEH,e","file":"component---src-pages-index-js-4399b819bc0fd386f7b5.js","sourcesContent":["import React from \"react\";\nimport { withTheme } from 'styled-components'\n\nimport styled from \"styled-components\";\n\nconst LandingContainer = styled.div`\n  display: grid;\n  border: 1px solid ${props => props.theme.borderColor};\n  border-width: 1px 0;\n  width: 100vw;\n  height: 90vh;\n  justify-items: center;\n  align-content: center;\n  gap: 3vh;\n  grid-template-rows: . repeat(4, 1fr) .;\n  @media screen and (min-width:1000px) {\n    justify-items: start;\n  }\n  & > * {\n    z-index: 10;\n    background-color: ${props => props.theme.landingTextBackground};\n    text-align: left;\n    justify-self:left;\n    margin: 0 10vw;\n    box-shadow: ${props => props.theme.landingTextBoxShadow};\n    border-radius:2px;\n    padding: 0 1vw;\n  }\n  &::after {\n    z-index: 0;\n    content: \"\";\n    position: absolute;\n    left: 0;\n    height: 90vh;\n    width: 100vw;\n    background-image: ${props => props.theme.landingBackground}\n  }\n`;\n\nconst Landing = (props) => (\n  <LandingContainer>\n    <p>joecodes.dev</p>\n    <h1>\n      <span>Joseph</span>\n      <br />\n      <span>Butterfield</span>\n    </h1>\n    <h4>Full-Stack Web Developer</h4>\n    <h6> — Reaching Digital Space — </h6>\n  </LandingContainer>\n);\n\nexport default withTheme(Landing);\n","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport styled, { withTheme } from \"styled-components\"\nimport Img from \"gatsby-image\"\n\nconst Container = styled.div`\n  display: grid;\n  border: 1px solid ${(props) => props.theme.borderColor};\n  border-width: 0 0 1px 0;\n  width: 100vw;\n  height: 90vh;\n  justify-items: center;\n  align-content: center;\n  gap: 3vh;\n  grid-template-rows: . repeat(4, 1fr) .;\n  @media screen and (min-width: 1000px) {\n    justify-items: start;\n  }\n`;\nconst ImageWrapper = styled.div`\n  width:50%;\n  background-color: ${props => props.theme.background};\n  padding: 4px;\n  border-radius:4px;\n\n`\n\nconst About = () => {\n  const data = useStaticQuery(graphql`\n    {\n      file(relativePath: { eq: \"profile-photo.JPG\" }) {\n        childImageSharp {\n          fluid {\n            aspectRatio\n            base64\n            sizes\n            src\n            srcSet\n          }\n        }\n      }\n    }\n  `);\n\n  console.log(data);\n\n  return (\n  <Container>\n    <ImageWrapper>\n      {/* <Img\n        fluid={data.file.childImageSharp.fluid}\n        alt=\"Joseph Butterfield Profile\"\n        style={{\"object-fit\":\"cover\",\n        }} /> */}\n    </ImageWrapper>\n    <p>A few words about me</p>\n  </Container>\n  )\n}\n\nexport default withTheme(About);\n\n// export const query = graphql`\n\n// `\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport Img from 'gatsby-image'\nimport styled from 'styled-components';\n\nconst PreviewTitle = styled.h3`\n  font-size: 1.5em;\n`\n\n\nexport default ({ article }) => (\n  <div>\n    <Img alt=\"\" fluid={article.heroImage.fluid} />\n    <PreviewTitle>\n      <Link to={`/blog/${article.slug}`}>{article.title}</Link>\n    </PreviewTitle>\n    <small>{article.publishDate}</small>\n    <div\n      dangerouslySetInnerHTML={{\n        __html: `<div>${article.description.childMarkdownRemark.html}</div>`\n      }}\n    />\n  </div>\n)\n","import React from 'react'\nimport { graphql } from 'gatsby'\nimport get from 'lodash/get'\nimport Helmet from 'react-helmet'\nimport styled, { withTheme } from 'styled-components'\n\nimport Layout from '../components/layout'\n\nimport Landing from '../components/landing'\nimport About from '../components/about'\nimport ArticlePreview from '../components/article-preview'\n\nconst Wrapper = styled.div`\n  margin: 0 10vw;\n  padding: 5vmin 0;\n`\nconst ArticleList = styled.ul`\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  grid-gap: 5vmin;\n`\nconst SectionHeadline = styled.h2`\n  padding: 0 0 0.4em 0;\n  margin: 0 0 5vmin 0;\n  border-bottom: 1px solid;\n  border-color: ${props => props.theme.borderColor};\n`\n\nclass RootIndex extends React.Component {\n  render() {\n    const siteTitle = get(this, 'props.data.site.siteMetadata.title')\n    const posts = get(this, 'props.data.allContentfulBlogPost.edges')\n\n    return (\n      <Layout location={this.props.location}>\n        <div >\n          <Helmet title={siteTitle} />\n          {/* <Hero data={author.node} /> */}\n          <Landing />\n          <About />\n          <Wrapper>\n            <SectionHeadline >Recent articles</SectionHeadline>\n            <ArticleList >\n              {posts.map(({ node }) => {\n                return (\n                  <li key={node.slug}>\n                    <ArticlePreview article={node} />\n                  </li>\n                );\n              })}\n            </ArticleList>\n          </Wrapper>\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport default withTheme(RootIndex)\n\nexport const pageQuery = graphql`\n  query HomeQuery {\n    allContentfulBlogPost(sort: { fields: [publishDate], order: DESC }) {\n      edges {\n        node {\n          title\n          slug\n          publishDate(formatString: \"MMMM Do, YYYY\")\n          tags\n          heroImage {\n            fluid(maxWidth: 350, maxHeight: 196, resizingBehavior: SCALE) {\n              ...GatsbyContentfulFluid_tracedSVG\n            }\n          }\n          description {\n            childMarkdownRemark {\n              html\n            }\n          }\n        }\n      }\n    }\n    allContentfulPerson(\n      filter: { contentful_id: { eq: \"15jwOBqpxqSAOy2eOO4S0m\" } }\n    ) {\n      edges {\n        node {\n          name\n          shortBio {\n            shortBio\n          }\n          title\n          heroImage: image {\n            fluid(\n              maxWidth: 1180\n              maxHeight: 480\n              resizingBehavior: PAD\n              background: \"rgb:000000\"\n            ) {\n              ...GatsbyContentfulFluid_tracedSVG\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}