{"version":3,"sources":["webpack:///./src/components/hero.js","webpack:///./src/components/article-preview.js","webpack:///./src/pages/index.js"],"names":["Hero","styled","div","HeroImg","Img","HeroDetails","HeroHeadline","h3","p","data","alt","name","fluid","heroImage","title","shortBio","PreviewTitle","article","to","slug","publishDate","dangerouslySetInnerHTML","__html","description","childMarkdownRemark","html","Wrapper","ArticleList","ul","SectionHeadline","h2","RootIndex","render","siteTitle","get","this","posts","author","location","props","node","className","map","key","React","Component","pageQuery"],"mappings":"6vCAIA,IAAMA,EAAOC,IAAOC,IAAV,KAMJC,EAAUF,YAAOG,IAAPH,CAAH,KAQPI,EAAcJ,IAAOC,IAAV,KAeXI,EAAeL,IAAOM,GAAV,KAaH,GANGN,IAAOO,EAAV,KAMA,gBAAGC,EAAH,EAAGA,KAAH,OACb,kBAACT,EAAD,KACE,kBAACG,EAAD,CAASO,IAAKD,EAAKE,KAAMC,MAAOH,EAAKI,UAAUD,QAC/C,kBAACP,EAAD,KACE,kBAACC,EAAD,KAAeG,EAAKE,MACpB,mCAAYF,EAAKK,OACjB,2BAAIL,EAAKM,SAASA,c,0JC/CxB,IAAMC,EAAef,IAAOM,GAAV,KAKH,kBAAGU,EAAH,EAAGA,QAAH,OACb,6BACE,kBAAC,IAAD,CAAKP,IAAI,GAAGE,MAAOK,EAAQJ,UAAUD,QACrC,kBAACI,EAAD,KACE,kBAAC,IAAD,CAAME,GAAE,SAAWD,EAAQE,MAASF,EAAQH,QAE9C,+BAAQG,EAAQG,aAChB,uBACEC,wBAAyB,CACvBC,OAAQL,EAAQM,YAAYC,oBAAoBC,U,yjBCTxD,IAAMC,EAAUzB,IAAOC,IAAV,KAMPyB,EAAc1B,IAAO2B,GAAV,KAQXC,EAAkB5B,IAAO6B,GAAV,KAMfC,E,gLACJC,OAAA,WACE,IAAMC,EAAYC,IAAIC,KAAM,sCACtBC,EAAQF,IAAIC,KAAM,0CACjBE,EAAUH,IAAIC,KAAM,wCAHpB,GAKP,OACE,kBAAC,IAAD,CAAQG,SAAUH,KAAKI,MAAMD,UAC3B,6BACE,kBAAC,IAAD,CAAQxB,MAAOmB,IACf,kBAAC,EAAD,CAAMxB,KAAM4B,EAAOG,OACnB,kBAACd,EAAD,KACE,kBAACG,EAAD,CAAiBY,UAAU,oBAA3B,mBACA,kBAACd,EAAD,CAAac,UAAU,gBACpBL,EAAMM,KAAI,YAAe,IAAZF,EAAW,EAAXA,KACZ,OACE,wBAAIG,IAAKH,EAAKrB,MACZ,kBAAC,EAAD,CAAgBF,QAASuB,a,GAjBrBI,IAAMC,WA+BjBC,GAFEf,YAEO","file":"component---src-pages-index-js-5930b398377550f64b78.js","sourcesContent":["import React from 'react'\nimport Img from 'gatsby-image'\nimport styled from 'styled-components'\n\nconst Hero = styled.div`\n  position: relative;\n  background: #000;\n  color: #fff;\n  text-align: center;\n`\nconst HeroImg = styled(Img)`\n  /*\n    Ensure golden ratio for the hero size while limiting it to some extend to\n    the viewport width\n  */\n  height: 61.8vh;\n  max-height: 400px;\n`\nconst HeroDetails = styled.div`\n  position: absolute;\n  background: rgba(0, 0, 0, 0.7);\n  left: 50%;\n  bottom: 0;\n  transform: translate(-50%, 0);\n  font-size: 14px;\n  padding: 0 0.5em;\n  @media(min-width:600px) {\n    font-size: 16px;\n  }\n  @media(min-width: 1000px) {\n    font-size: 20px;\n  }\n`\nconst HeroHeadline = styled.h3`\n  margin: 0;\n  color:white;\n  font-weight:bold;\n  padding: 30px 0;\n  letter-spacing:.1rem;\n`\nconst heroTitle = styled.p`\n  margin: 0;\n  font-size: 1.125em;\n  font-weight: bold;\n`\n\nexport default ({ data }) => (\n  <Hero>\n    <HeroImg alt={data.name} fluid={data.heroImage.fluid} />\n    <HeroDetails>\n      <HeroHeadline>{data.name}</HeroHeadline>\n      <heroTitle>{data.title}</heroTitle>\n      <p>{data.shortBio.shortBio}</p>\n    </HeroDetails>\n  </Hero>\n);\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport Img from 'gatsby-image'\nimport styled from 'styled-components';\n\nconst PreviewTitle = styled.h3`\n  font-size: 1.5em;\n`\n\n\nexport default ({ article }) => (\n  <div>\n    <Img alt=\"\" fluid={article.heroImage.fluid} />\n    <PreviewTitle>\n      <Link to={`/blog/${article.slug}`}>{article.title}</Link>\n    </PreviewTitle>\n    <small>{article.publishDate}</small>\n    <p\n      dangerouslySetInnerHTML={{\n        __html: article.description.childMarkdownRemark.html,\n      }}\n    />\n  </div>\n)\n","import React from 'react'\nimport { graphql } from 'gatsby'\nimport get from 'lodash/get'\nimport Helmet from 'react-helmet'\nimport styled from 'styled-components'\n\nimport Hero from '../components/hero'\nimport Layout from '../components/layout'\nimport ArticlePreview from '../components/article-preview'\n\nconst Wrapper = styled.div`\n  width: calc(100% - 10vmin);\n  margin: 0 auto;\n  padding: 5vmin 0;\n  background-color:inherit;\n`\nconst ArticleList = styled.ul`\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  grid-gap: 5vmin;\n`\nconst SectionHeadline = styled.h2`\n  padding: 0 0 0.4em 0;\n  margin: 0 0 5vmin 0;\n  border-bottom: 1px solid #ddd;\n`\n\nclass RootIndex extends React.Component {\n  render() {\n    const siteTitle = get(this, 'props.data.site.siteMetadata.title')\n    const posts = get(this, 'props.data.allContentfulBlogPost.edges')\n    const [author] = get(this, 'props.data.allContentfulPerson.edges')\n\n    return (\n      <Layout location={this.props.location}>\n        <div >\n          <Helmet title={siteTitle} />\n          <Hero data={author.node} />\n          <Wrapper>\n            <SectionHeadline className=\"section-headline\">Recent articles</SectionHeadline>\n            <ArticleList className=\"article-list\">\n              {posts.map(({ node }) => {\n                return (\n                  <li key={node.slug}>\n                    <ArticlePreview article={node} />\n                  </li>\n                );\n              })}\n            </ArticleList>\n          </Wrapper>\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport default RootIndex\n\nexport const pageQuery = graphql`\n  query HomeQuery {\n    allContentfulBlogPost(sort: { fields: [publishDate], order: DESC }) {\n      edges {\n        node {\n          title\n          slug\n          publishDate(formatString: \"MMMM Do, YYYY\")\n          tags\n          heroImage {\n            fluid(maxWidth: 350, maxHeight: 196, resizingBehavior: SCALE) {\n              ...GatsbyContentfulFluid_tracedSVG\n            }\n          }\n          description {\n            childMarkdownRemark {\n              html\n            }\n          }\n        }\n      }\n    }\n    allContentfulPerson(\n      filter: { contentful_id: { eq: \"15jwOBqpxqSAOy2eOO4S0m\" } }\n    ) {\n      edges {\n        node {\n          name\n          shortBio {\n            shortBio\n          }\n          title\n          heroImage: image {\n            fluid(\n              maxWidth: 1180\n              maxHeight: 480\n              resizingBehavior: PAD\n              background: \"rgb:000000\"\n            ) {\n              ...GatsbyContentfulFluid_tracedSVG\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}